
> integration-tests@1.0.0 test:cqrs
> jest --config=jestconfig.js src/tests/cqrs-flow.test.ts

  console.log
    Getting user authentication token...

      at tests/cqrs-flow.test.ts:21:15

  console.log
    Created organization: Test Organization with ID: f4073f69-77d0-4466-a468-aad4e4337392

      at tests/cqrs-flow.test.ts:56:13

  console.error
    Error making POST request to http://localhost:8081/api/event-seating/v1/events/undefined/approve: AxiosError {
      message: 'Request failed with status code 400',
      name: 'AxiosError',
      code: 'ERR_BAD_REQUEST',
      config: {
        transitional: {
          silentJSONParsing: true,
          forcedJSONParsing: true,
          clarifyTimeoutError: false
        },
        adapter: [ 'xhr', 'http', 'fetch' ],
        transformRequest: [ [Function: transformRequest] ],
        transformResponse: [ [Function: transformResponse] ],
        timeout: 0,
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        env: { FormData: [Function [FormData]], Blob: [class Blob] },
        validateStatus: [Function: validateStatus],
        headers: Object [AxiosHeaders] {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/x-www-form-urlencoded',
          Authorization: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6czh1R0p2OGVMV2dzWGloampyRDhoakFKUDdJOFhnOFZQQnJlQVEyT0VZIn0.eyJleHAiOjE3NjAyMDg3MjgsImlhdCI6MTc2MDIwODQyOCwianRpIjoib25ydHJvOjE5MjcyYzZlLWQ5MjUtZGRmZC0zMDZkLTU5ODc4ZjZiMDA5ZSIsImlzcyI6Imh0dHA6Ly9hdXRoLnRpY2tldGx5LmNvbTo4MDgwL3JlYWxtcy9ldmVudC10aWNrZXRpbmciLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYWE2YmJkZDktNmM5OC00OWY4LWFjNzItYzQzYmJjNmE0MjY5IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tdGVzdGluZyIsInNpZCI6Ijg5YTQwYWViLTAzZDItNDBmYi05ZTFkLTdhNjlkMmQyYjIwMiIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJldmVudF9hZG1pbiIsImRlZmF1bHQtcm9sZXMtZXZlbnQtdGlja2V0aW5nIiwib2ZmbGluZV9hY2Nlc3MiLCJjYXRlZ29yeV9hZG1pbiIsInVtYV9hdXRob3JpemF0aW9uIiwib3JnYW5pemF0aW9uX2FkbWluIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJncm91cF9tZW1iZXJzaGlwIGludGVybmFsLWFwaSIsInVzZXJfZ3JvdXBzIjpbIi9UaWVycy9QUk8iLCIvUGVybWlzc2lvbnMvVXNlcnMvU3lzdGVtIEFkbWlucyJdfQ.GInPAse5xutPQ_zEzKWk0AmlFRpS6FFGzlQjRQdqT-t70DnR0hoRoU7p6FPnODUhg1j01OBdUaIX_bwqNz3zAzmCNAAJJt1kKZZZcalpM-siki9OpFYQWahSCpwTTtHVJBR_5qaGCEVfRLIL94dfl7Is2hhcPtGTtI416scjsthpTlN2ON44PlekSw-CCrgNGdZW4Wf4kMnyArswlWuosWpaX1vpyOjdu2h_nuYd5cLdXvKQ0n_Z3euNKnsYB7_MR2iQMo5QuDoQu0TU7JX0r7r4ChaaN7z2pdIiw509BfAgRgYGf1F8JxbKcuinO4J-BYQlgitRVAVEBBt9MPqtuA',
          'User-Agent': 'axios/1.12.2',
          'Accept-Encoding': 'gzip, compress, deflate, br'
        },
        method: 'post',
        url: 'http://localhost:8081/api/event-seating/v1/events/undefined/approve',
        allowAbsoluteUrls: true,
        data: undefined
      },
      request: <ref *1> ClientRequest {
        _events: [Object: null prototype] {
          abort: [Function (anonymous)],
          aborted: [Function (anonymous)],
          connect: [Function (anonymous)],
          error: [Function (anonymous)],
          socket: [Function (anonymous)],
          timeout: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: false,
        _header: 'POST /api/event-seating/v1/events/undefined/approve HTTP/1.1\r\n' +
          'Accept: application/json, text/plain, */*\r\n' +
          'Content-Type: application/x-www-form-urlencoded\r\n' +
          'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6czh1R0p2OGVMV2dzWGloampyRDhoakFKUDdJOFhnOFZQQnJlQVEyT0VZIn0.eyJleHAiOjE3NjAyMDg3MjgsImlhdCI6MTc2MDIwODQyOCwianRpIjoib25ydHJvOjE5MjcyYzZlLWQ5MjUtZGRmZC0zMDZkLTU5ODc4ZjZiMDA5ZSIsImlzcyI6Imh0dHA6Ly9hdXRoLnRpY2tldGx5LmNvbTo4MDgwL3JlYWxtcy9ldmVudC10aWNrZXRpbmciLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYWE2YmJkZDktNmM5OC00OWY4LWFjNzItYzQzYmJjNmE0MjY5IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tdGVzdGluZyIsInNpZCI6Ijg5YTQwYWViLTAzZDItNDBmYi05ZTFkLTdhNjlkMmQyYjIwMiIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJldmVudF9hZG1pbiIsImRlZmF1bHQtcm9sZXMtZXZlbnQtdGlja2V0aW5nIiwib2ZmbGluZV9hY2Nlc3MiLCJjYXRlZ29yeV9hZG1pbiIsInVtYV9hdXRob3JpemF0aW9uIiwib3JnYW5pemF0aW9uX2FkbWluIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJncm91cF9tZW1iZXJzaGlwIGludGVybmFsLWFwaSIsInVzZXJfZ3JvdXBzIjpbIi9UaWVycy9QUk8iLCIvUGVybWlzc2lvbnMvVXNlcnMvU3lzdGVtIEFkbWlucyJdfQ.GInPAse5xutPQ_zEzKWk0AmlFRpS6FFGzlQjRQdqT-t70DnR0hoRoU7p6FPnODUhg1j01OBdUaIX_bwqNz3zAzmCNAAJJt1kKZZZcalpM-siki9OpFYQWahSCpwTTtHVJBR_5qaGCEVfRLIL94dfl7Is2hhcPtGTtI416scjsthpTlN2ON44PlekSw-CCrgNGdZW4Wf4kMnyArswlWuosWpaX1vpyOjdu2h_nuYd5cLdXvKQ0n_Z3euNKnsYB7_MR2iQMo5QuDoQu0TU7JX0r7r4ChaaN7z2pdIiw509BfAgRgYGf1F8JxbKcuinO4J-BYQlgitRVAVEBBt9MPqtuA\r\n' +
          'User-Agent: axios/1.12.2\r\n' +
          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
          'Host: localhost:8081\r\n' +
          'Connection: keep-alive\r\n' +
          'Content-Length: 0\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: Agent {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 80,
          protocol: 'http:',
          options: [Object: null prototype],
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype],
          freeSockets: [Object: null prototype],
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 2,
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        joinDuplicateHeaders: undefined,
        path: '/api/event-seating/v1/events/undefined/approve',
        _ended: true,
        res: IncomingMessage {
          _events: [Object],
          _readableState: [ReadableState],
          _maxListeners: undefined,
          socket: [Socket],
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [Array],
          rawTrailers: [],
          joinDuplicateHeaders: undefined,
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 400,
          statusMessage: '',
          client: [Socket],
          _consuming: true,
          _dumped: false,
          req: [Circular *1],
          _eventsCount: 4,
          responseUrl: 'http://localhost:8081/api/event-seating/v1/events/undefined/approve',
          redirects: [],
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: [Object],
          [Symbol(kHeadersCount)]: 26,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0
        },
        aborted: false,
        timeoutCb: [Function: emitRequestTimeout],
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'localhost',
        protocol: 'http:',
        _redirectable: Writable {
          _events: [Object],
          _writableState: [WritableState],
          _maxListeners: undefined,
          _options: [Object],
          _ended: true,
          _ending: true,
          _redirectCount: 0,
          _redirects: [],
          _requestBodyLength: 0,
          _requestBodyBuffers: [],
          _eventsCount: 3,
          _onNativeResponse: [Function (anonymous)],
          _currentRequest: [Circular *1],
          _currentUrl: 'http://localhost:8081/api/event-seating/v1/events/undefined/approve',
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false
        },
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kChunkedBuffer)]: [],
        [Symbol(kChunkedLength)]: 0,
        [Symbol(kSocket)]: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'localhost',
          _closeAfterHandlingError: false,
          _events: [Object],
          _readableState: [ReadableState],
          _writableState: [WritableState],
          allowHalfOpen: false,
          _maxListeners: undefined,
          _eventsCount: 7,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          timeout: 5000,
          parser: null,
          _httpMessage: [Circular *1],
          autoSelectFamilyAttemptedAddresses: [Array],
          [Symbol(async_id_symbol)]: 1764,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: Timeout {
            _idleTimeout: 5000,
            _idlePrev: [TimersList],
            _idleNext: [Timeout],
            _idleStart: 2876,
            _onTimeout: [Function: bound ],
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 1763,
            [Symbol(triggerId)]: 1738,
            [Symbol(kAsyncContextFrame)]: undefined,
            [Symbol(kResourceStore)]: 'Event Ticketing System Integration Tests A7. Approve event as admin'
          },
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 60,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          accept: [Array],
          'content-type': [Array],
          authorization: [Array],
          'user-agent': [Array],
          'accept-encoding': [Array],
          host: [Array]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 65536,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      response: {
        status: 400,
        statusText: '',
        headers: Object [AxiosHeaders] {
          vary: 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers',
          'x-content-type-options': 'nosniff',
          'x-xss-protection': '0',
          'cache-control': 'no-cache, no-store, max-age=0, must-revalidate',
          pragma: 'no-cache',
          expires: '0',
          'x-frame-options': 'DENY',
          'content-type': 'application/json',
          'transfer-encoding': 'chunked',
          date: 'Sat, 11 Oct 2025 18:47:08 GMT',
          connection: 'close'
        },
        config: {
          transitional: [Object],
          adapter: [Array],
          transformRequest: [Array],
          transformResponse: [Array],
          timeout: 0,
          xsrfCookieName: 'XSRF-TOKEN',
          xsrfHeaderName: 'X-XSRF-TOKEN',
          maxContentLength: -1,
          maxBodyLength: -1,
          env: [Object],
          validateStatus: [Function: validateStatus],
          headers: [Object [AxiosHeaders]],
          method: 'post',
          url: 'http://localhost:8081/api/event-seating/v1/events/undefined/approve',
          allowAbsoluteUrls: true,
          data: undefined
        },
        request: <ref *1> ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: 0,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: false,
          _header: 'POST /api/event-seating/v1/events/undefined/approve HTTP/1.1\r\n' +
            'Accept: application/json, text/plain, */*\r\n' +
            'Content-Type: application/x-www-form-urlencoded\r\n' +
            'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6czh1R0p2OGVMV2dzWGloampyRDhoakFKUDdJOFhnOFZQQnJlQVEyT0VZIn0.eyJleHAiOjE3NjAyMDg3MjgsImlhdCI6MTc2MDIwODQyOCwianRpIjoib25ydHJvOjE5MjcyYzZlLWQ5MjUtZGRmZC0zMDZkLTU5ODc4ZjZiMDA5ZSIsImlzcyI6Imh0dHA6Ly9hdXRoLnRpY2tldGx5LmNvbTo4MDgwL3JlYWxtcy9ldmVudC10aWNrZXRpbmciLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYWE2YmJkZDktNmM5OC00OWY4LWFjNzItYzQzYmJjNmE0MjY5IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tdGVzdGluZyIsInNpZCI6Ijg5YTQwYWViLTAzZDItNDBmYi05ZTFkLTdhNjlkMmQyYjIwMiIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJldmVudF9hZG1pbiIsImRlZmF1bHQtcm9sZXMtZXZlbnQtdGlja2V0aW5nIiwib2ZmbGluZV9hY2Nlc3MiLCJjYXRlZ29yeV9hZG1pbiIsInVtYV9hdXRob3JpemF0aW9uIiwib3JnYW5pemF0aW9uX2FkbWluIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJncm91cF9tZW1iZXJzaGlwIGludGVybmFsLWFwaSIsInVzZXJfZ3JvdXBzIjpbIi9UaWVycy9QUk8iLCIvUGVybWlzc2lvbnMvVXNlcnMvU3lzdGVtIEFkbWlucyJdfQ.GInPAse5xutPQ_zEzKWk0AmlFRpS6FFGzlQjRQdqT-t70DnR0hoRoU7p6FPnODUhg1j01OBdUaIX_bwqNz3zAzmCNAAJJt1kKZZZcalpM-siki9OpFYQWahSCpwTTtHVJBR_5qaGCEVfRLIL94dfl7Is2hhcPtGTtI416scjsthpTlN2ON44PlekSw-CCrgNGdZW4Wf4kMnyArswlWuosWpaX1vpyOjdu2h_nuYd5cLdXvKQ0n_Z3euNKnsYB7_MR2iQMo5QuDoQu0TU7JX0r7r4ChaaN7z2pdIiw509BfAgRgYGf1F8JxbKcuinO4J-BYQlgitRVAVEBBt9MPqtuA\r\n' +
            'User-Agent: axios/1.12.2\r\n' +
            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
            'Host: localhost:8081\r\n' +
            'Connection: keep-alive\r\n' +
            'Content-Length: 0\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'POST',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          joinDuplicateHeaders: undefined,
          path: '/api/event-seating/v1/events/undefined/approve',
          _ended: true,
          res: [IncomingMessage],
          aborted: false,
          timeoutCb: [Function: emitRequestTimeout],
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: 'localhost',
          protocol: 'http:',
          _redirectable: [Writable],
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kChunkedBuffer)]: [],
          [Symbol(kChunkedLength)]: 0,
          [Symbol(kSocket)]: [Socket],
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 65536,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        data: {
          status: 400,
          message: 'Invalid parameter type: eventId',
          timestamp: '2025-10-11T18:47:08.7163247'
        }
      },
      status: 400
    }

      42 |     return response.data;
      43 |   } catch (error) {
    > 44 |     console.error(`Error making ${method.toUpperCase()} request to ${url}:`, error);
         |             ^
      45 |     throw error;
      46 |   }
      47 | }

      at utils/apiUtils.ts:44:13
          at Generator.throw (<anonymous>)
      at rejected (utils/apiUtils.ts:6:65)

  console.error
    Error making GET request to http://localhost:8082/api/event-query/v1/events/undefined/basic-info: AxiosError {
      message: 'Request failed with status code 404',
      name: 'AxiosError',
      code: 'ERR_BAD_REQUEST',
      config: {
        transitional: {
          silentJSONParsing: true,
          forcedJSONParsing: true,
          clarifyTimeoutError: false
        },
        adapter: [ 'xhr', 'http', 'fetch' ],
        transformRequest: [ [Function: transformRequest] ],
        transformResponse: [ [Function: transformResponse] ],
        timeout: 0,
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        env: { FormData: [Function [FormData]], Blob: [class Blob] },
        validateStatus: [Function: validateStatus],
        headers: Object [AxiosHeaders] {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': undefined,
          Authorization: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6czh1R0p2OGVMV2dzWGloampyRDhoakFKUDdJOFhnOFZQQnJlQVEyT0VZIn0.eyJleHAiOjE3NjAyMDg3MjgsImlhdCI6MTc2MDIwODQyOCwianRpIjoib25ydHJvOjA5ZDU3M2NkLWVhODQtYzhhYi0zYzM5LWE4Zjc2N2ViZmQwMCIsImlzcyI6Imh0dHA6Ly9hdXRoLnRpY2tldGx5LmNvbTo4MDgwL3JlYWxtcy9ldmVudC10aWNrZXRpbmciLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYWE0ZjRlZDctMWM5ZC00ZjFjLThiMDYtMzFlZjY3OWVlYTJmIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tdGVzdGluZyIsInNpZCI6IjBjODI1Y2QwLTEyYjgtNDRhMi1iZDY0LTNkMWQxOWNlNTk1OCIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJkZWZhdWx0LXJvbGVzLWV2ZW50LXRpY2tldGluZyIsIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Imdyb3VwX21lbWJlcnNoaXAgaW50ZXJuYWwtYXBpIiwidXNlcl9ncm91cHMiOlsiL1RpZXJzL0VOVEVSUFJJU0UiLCIvUGVybWlzc2lvbnMvVXNlcnMiXX0.c2zrWJQenHIooa7y3JT101aLGwriYtnMA8R_tM--jZ5iOEq1-yyET49dWE8pgz4Cq7frD6OgIVzMnUf2LSMOA2wHk3x0ZyhbsKvRfD52PCxrl8Zr2jJo3-eCwiTv4rainuiGT9rWfTerPdt1Gidiv3_-Zmmx2QluED7uqmeehQvVcxfZhBn4Xd0HvDlW2WaIrh_C6B4pSuvvZHa9f8vkR5WYyzQRJQwADwNJxfiMubypSjed5-p8PvkVqU186LuMdt07R6WO9jj9bD8wxv_UM-cZAYH9XVcNDsOlZ0FDSvL388zZqUQlMxLG28dt8ecORA1ggFHHMCKhPX7n4iUzUQ',
          'User-Agent': 'axios/1.12.2',
          'Accept-Encoding': 'gzip, compress, deflate, br'
        },
        method: 'get',
        url: 'http://localhost:8082/api/event-query/v1/events/undefined/basic-info',
        allowAbsoluteUrls: true,
        data: undefined
      },
      request: <ref *1> ClientRequest {
        _events: [Object: null prototype] {
          abort: [Function (anonymous)],
          aborted: [Function (anonymous)],
          connect: [Function (anonymous)],
          error: [Function (anonymous)],
          socket: [Function (anonymous)],
          timeout: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: true,
        _header: 'GET /api/event-query/v1/events/undefined/basic-info HTTP/1.1\r\n' +
          'Accept: application/json, text/plain, */*\r\n' +
          'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6czh1R0p2OGVMV2dzWGloampyRDhoakFKUDdJOFhnOFZQQnJlQVEyT0VZIn0.eyJleHAiOjE3NjAyMDg3MjgsImlhdCI6MTc2MDIwODQyOCwianRpIjoib25ydHJvOjA5ZDU3M2NkLWVhODQtYzhhYi0zYzM5LWE4Zjc2N2ViZmQwMCIsImlzcyI6Imh0dHA6Ly9hdXRoLnRpY2tldGx5LmNvbTo4MDgwL3JlYWxtcy9ldmVudC10aWNrZXRpbmciLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYWE0ZjRlZDctMWM5ZC00ZjFjLThiMDYtMzFlZjY3OWVlYTJmIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tdGVzdGluZyIsInNpZCI6IjBjODI1Y2QwLTEyYjgtNDRhMi1iZDY0LTNkMWQxOWNlNTk1OCIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJkZWZhdWx0LXJvbGVzLWV2ZW50LXRpY2tldGluZyIsIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Imdyb3VwX21lbWJlcnNoaXAgaW50ZXJuYWwtYXBpIiwidXNlcl9ncm91cHMiOlsiL1RpZXJzL0VOVEVSUFJJU0UiLCIvUGVybWlzc2lvbnMvVXNlcnMiXX0.c2zrWJQenHIooa7y3JT101aLGwriYtnMA8R_tM--jZ5iOEq1-yyET49dWE8pgz4Cq7frD6OgIVzMnUf2LSMOA2wHk3x0ZyhbsKvRfD52PCxrl8Zr2jJo3-eCwiTv4rainuiGT9rWfTerPdt1Gidiv3_-Zmmx2QluED7uqmeehQvVcxfZhBn4Xd0HvDlW2WaIrh_C6B4pSuvvZHa9f8vkR5WYyzQRJQwADwNJxfiMubypSjed5-p8PvkVqU186LuMdt07R6WO9jj9bD8wxv_UM-cZAYH9XVcNDsOlZ0FDSvL388zZqUQlMxLG28dt8ecORA1ggFHHMCKhPX7n4iUzUQ\r\n' +
          'User-Agent: axios/1.12.2\r\n' +
          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
          'Host: localhost:8082\r\n' +
          'Connection: keep-alive\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: Agent {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 80,
          protocol: 'http:',
          options: [Object: null prototype],
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {},
          freeSockets: [Object: null prototype],
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 2,
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'GET',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        joinDuplicateHeaders: undefined,
        path: '/api/event-query/v1/events/undefined/basic-info',
        _ended: true,
        res: IncomingMessage {
          _events: [Object],
          _readableState: [ReadableState],
          _maxListeners: undefined,
          socket: null,
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [Array],
          rawTrailers: [],
          joinDuplicateHeaders: undefined,
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 404,
          statusMessage: 'Not Found',
          client: [Socket],
          _consuming: false,
          _dumped: false,
          req: [Circular *1],
          _eventsCount: 4,
          responseUrl: 'http://localhost:8082/api/event-query/v1/events/undefined/basic-info',
          redirects: [],
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: [Object],
          [Symbol(kHeadersCount)]: 18,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0
        },
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'localhost',
        protocol: 'http:',
        _redirectable: Writable {
          _events: [Object],
          _writableState: [WritableState],
          _maxListeners: undefined,
          _options: [Object],
          _ended: true,
          _ending: true,
          _redirectCount: 0,
          _redirects: [],
          _requestBodyLength: 0,
          _requestBodyBuffers: [],
          _eventsCount: 3,
          _onNativeResponse: [Function (anonymous)],
          _currentRequest: [Circular *1],
          _currentUrl: 'http://localhost:8082/api/event-query/v1/events/undefined/basic-info',
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false
        },
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kChunkedBuffer)]: [],
        [Symbol(kChunkedLength)]: 0,
        [Symbol(kSocket)]: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'localhost',
          _closeAfterHandlingError: false,
          _events: [Object],
          _readableState: [ReadableState],
          _writableState: [WritableState],
          allowHalfOpen: false,
          _maxListeners: undefined,
          _eventsCount: 6,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          timeout: 5000,
          parser: null,
          _httpMessage: null,
          autoSelectFamilyAttemptedAddresses: [Array],
          [Symbol(async_id_symbol)]: -1,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: Timeout {
            _idleTimeout: 5000,
            _idlePrev: [TimersList],
            _idleNext: [Timeout],
            _idleStart: 2967,
            _onTimeout: [Function: bound ],
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 2729,
            [Symbol(triggerId)]: 2727,
            [Symbol(kAsyncContextFrame)]: undefined,
            [Symbol(kResourceStore)]: 'Event Ticketing System Integration Tests A10. Fetch event using event-query-service'
          },
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 1,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          accept: [Array],
          authorization: [Array],
          'user-agent': [Array],
          'accept-encoding': [Array],
          host: [Array]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 65536,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      response: {
        status: 404,
        statusText: 'Not Found',
        headers: Object [AxiosHeaders] {
          'content-type': 'application/json',
          'content-length': '198',
          'cache-control': 'no-cache, no-store, max-age=0, must-revalidate',
          pragma: 'no-cache',
          expires: '0',
          'x-content-type-options': 'nosniff',
          'x-frame-options': 'DENY',
          'x-xss-protection': '0',
          'referrer-policy': 'no-referrer'
        },
        config: {
          transitional: [Object],
          adapter: [Array],
          transformRequest: [Array],
          transformResponse: [Array],
          timeout: 0,
          xsrfCookieName: 'XSRF-TOKEN',
          xsrfHeaderName: 'X-XSRF-TOKEN',
          maxContentLength: -1,
          maxBodyLength: -1,
          env: [Object],
          validateStatus: [Function: validateStatus],
          headers: [Object [AxiosHeaders]],
          method: 'get',
          url: 'http://localhost:8082/api/event-query/v1/events/undefined/basic-info',
          allowAbsoluteUrls: true,
          data: undefined
        },
        request: <ref *1> ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: true,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: false,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: 0,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: true,
          _header: 'GET /api/event-query/v1/events/undefined/basic-info HTTP/1.1\r\n' +
            'Accept: application/json, text/plain, */*\r\n' +
            'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6czh1R0p2OGVMV2dzWGloampyRDhoakFKUDdJOFhnOFZQQnJlQVEyT0VZIn0.eyJleHAiOjE3NjAyMDg3MjgsImlhdCI6MTc2MDIwODQyOCwianRpIjoib25ydHJvOjA5ZDU3M2NkLWVhODQtYzhhYi0zYzM5LWE4Zjc2N2ViZmQwMCIsImlzcyI6Imh0dHA6Ly9hdXRoLnRpY2tldGx5LmNvbTo4MDgwL3JlYWxtcy9ldmVudC10aWNrZXRpbmciLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYWE0ZjRlZDctMWM5ZC00ZjFjLThiMDYtMzFlZjY3OWVlYTJmIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tdGVzdGluZyIsInNpZCI6IjBjODI1Y2QwLTEyYjgtNDRhMi1iZDY0LTNkMWQxOWNlNTk1OCIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJkZWZhdWx0LXJvbGVzLWV2ZW50LXRpY2tldGluZyIsIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Imdyb3VwX21lbWJlcnNoaXAgaW50ZXJuYWwtYXBpIiwidXNlcl9ncm91cHMiOlsiL1RpZXJzL0VOVEVSUFJJU0UiLCIvUGVybWlzc2lvbnMvVXNlcnMiXX0.c2zrWJQenHIooa7y3JT101aLGwriYtnMA8R_tM--jZ5iOEq1-yyET49dWE8pgz4Cq7frD6OgIVzMnUf2LSMOA2wHk3x0ZyhbsKvRfD52PCxrl8Zr2jJo3-eCwiTv4rainuiGT9rWfTerPdt1Gidiv3_-Zmmx2QluED7uqmeehQvVcxfZhBn4Xd0HvDlW2WaIrh_C6B4pSuvvZHa9f8vkR5WYyzQRJQwADwNJxfiMubypSjed5-p8PvkVqU186LuMdt07R6WO9jj9bD8wxv_UM-cZAYH9XVcNDsOlZ0FDSvL388zZqUQlMxLG28dt8ecORA1ggFHHMCKhPX7n4iUzUQ\r\n' +
            'User-Agent: axios/1.12.2\r\n' +
            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
            'Host: localhost:8082\r\n' +
            'Connection: keep-alive\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'GET',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          joinDuplicateHeaders: undefined,
          path: '/api/event-query/v1/events/undefined/basic-info',
          _ended: true,
          res: [IncomingMessage],
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: 'localhost',
          protocol: 'http:',
          _redirectable: [Writable],
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kChunkedBuffer)]: [],
          [Symbol(kChunkedLength)]: 0,
          [Symbol(kSocket)]: [Socket],
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 65536,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        data: {
          status: 404,
          error: 'Not Found',
          message: "Event not found with id: 'undefined'",
          path: '/api/event-query/v1/events/undefined/basic-info',
          timestamp: '2025-10-11 18:47:08',
          validationErrors: null
        }
      },
      status: 404
    }

      42 |     return response.data;
      43 |   } catch (error) {
    > 44 |     console.error(`Error making ${method.toUpperCase()} request to ${url}:`, error);
         |             ^
      45 |     throw error;
      46 |   }
      47 | }

      at utils/apiUtils.ts:44:13
          at Generator.throw (<anonymous>)
      at rejected (utils/apiUtils.ts:6:65)

  console.error
    Error making PUT request to http://localhost:8081/api/event-seating/v1/sessions/undefined/status: AxiosError {
      message: 'Request failed with status code 400',
      name: 'AxiosError',
      code: 'ERR_BAD_REQUEST',
      config: {
        transitional: {
          silentJSONParsing: true,
          forcedJSONParsing: true,
          clarifyTimeoutError: false
        },
        adapter: [ 'xhr', 'http', 'fetch' ],
        transformRequest: [ [Function: transformRequest] ],
        transformResponse: [ [Function: transformResponse] ],
        timeout: 0,
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        env: { FormData: [Function [FormData]], Blob: [class Blob] },
        validateStatus: [Function: validateStatus],
        headers: Object [AxiosHeaders] {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json',
          Authorization: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6czh1R0p2OGVMV2dzWGloampyRDhoakFKUDdJOFhnOFZQQnJlQVEyT0VZIn0.eyJleHAiOjE3NjAyMDg3MjgsImlhdCI6MTc2MDIwODQyOCwianRpIjoib25ydHJvOjA5ZDU3M2NkLWVhODQtYzhhYi0zYzM5LWE4Zjc2N2ViZmQwMCIsImlzcyI6Imh0dHA6Ly9hdXRoLnRpY2tldGx5LmNvbTo4MDgwL3JlYWxtcy9ldmVudC10aWNrZXRpbmciLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYWE0ZjRlZDctMWM5ZC00ZjFjLThiMDYtMzFlZjY3OWVlYTJmIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tdGVzdGluZyIsInNpZCI6IjBjODI1Y2QwLTEyYjgtNDRhMi1iZDY0LTNkMWQxOWNlNTk1OCIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJkZWZhdWx0LXJvbGVzLWV2ZW50LXRpY2tldGluZyIsIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Imdyb3VwX21lbWJlcnNoaXAgaW50ZXJuYWwtYXBpIiwidXNlcl9ncm91cHMiOlsiL1RpZXJzL0VOVEVSUFJJU0UiLCIvUGVybWlzc2lvbnMvVXNlcnMiXX0.c2zrWJQenHIooa7y3JT101aLGwriYtnMA8R_tM--jZ5iOEq1-yyET49dWE8pgz4Cq7frD6OgIVzMnUf2LSMOA2wHk3x0ZyhbsKvRfD52PCxrl8Zr2jJo3-eCwiTv4rainuiGT9rWfTerPdt1Gidiv3_-Zmmx2QluED7uqmeehQvVcxfZhBn4Xd0HvDlW2WaIrh_C6B4pSuvvZHa9f8vkR5WYyzQRJQwADwNJxfiMubypSjed5-p8PvkVqU186LuMdt07R6WO9jj9bD8wxv_UM-cZAYH9XVcNDsOlZ0FDSvL388zZqUQlMxLG28dt8ecORA1ggFHHMCKhPX7n4iUzUQ',
          'User-Agent': 'axios/1.12.2',
          'Content-Length': '20',
          'Accept-Encoding': 'gzip, compress, deflate, br'
        },
        method: 'put',
        url: 'http://localhost:8081/api/event-seating/v1/sessions/undefined/status',
        data: '{"status":"ON_SALE"}',
        allowAbsoluteUrls: true
      },
      request: <ref *1> ClientRequest {
        _events: [Object: null prototype] {
          abort: [Function (anonymous)],
          aborted: [Function (anonymous)],
          connect: [Function (anonymous)],
          error: [Function (anonymous)],
          socket: [Function (anonymous)],
          timeout: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 20,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: false,
        _header: 'PUT /api/event-seating/v1/sessions/undefined/status HTTP/1.1\r\n' +
          'Accept: application/json, text/plain, */*\r\n' +
          'Content-Type: application/json\r\n' +
          'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6czh1R0p2OGVMV2dzWGloampyRDhoakFKUDdJOFhnOFZQQnJlQVEyT0VZIn0.eyJleHAiOjE3NjAyMDg3MjgsImlhdCI6MTc2MDIwODQyOCwianRpIjoib25ydHJvOjA5ZDU3M2NkLWVhODQtYzhhYi0zYzM5LWE4Zjc2N2ViZmQwMCIsImlzcyI6Imh0dHA6Ly9hdXRoLnRpY2tldGx5LmNvbTo4MDgwL3JlYWxtcy9ldmVudC10aWNrZXRpbmciLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYWE0ZjRlZDctMWM5ZC00ZjFjLThiMDYtMzFlZjY3OWVlYTJmIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tdGVzdGluZyIsInNpZCI6IjBjODI1Y2QwLTEyYjgtNDRhMi1iZDY0LTNkMWQxOWNlNTk1OCIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJkZWZhdWx0LXJvbGVzLWV2ZW50LXRpY2tldGluZyIsIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Imdyb3VwX21lbWJlcnNoaXAgaW50ZXJuYWwtYXBpIiwidXNlcl9ncm91cHMiOlsiL1RpZXJzL0VOVEVSUFJJU0UiLCIvUGVybWlzc2lvbnMvVXNlcnMiXX0.c2zrWJQenHIooa7y3JT101aLGwriYtnMA8R_tM--jZ5iOEq1-yyET49dWE8pgz4Cq7frD6OgIVzMnUf2LSMOA2wHk3x0ZyhbsKvRfD52PCxrl8Zr2jJo3-eCwiTv4rainuiGT9rWfTerPdt1Gidiv3_-Zmmx2QluED7uqmeehQvVcxfZhBn4Xd0HvDlW2WaIrh_C6B4pSuvvZHa9f8vkR5WYyzQRJQwADwNJxfiMubypSjed5-p8PvkVqU186LuMdt07R6WO9jj9bD8wxv_UM-cZAYH9XVcNDsOlZ0FDSvL388zZqUQlMxLG28dt8ecORA1ggFHHMCKhPX7n4iUzUQ\r\n' +
          'User-Agent: axios/1.12.2\r\n' +
          'Content-Length: 20\r\n' +
          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
          'Host: localhost:8081\r\n' +
          'Connection: keep-alive\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: Agent {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 80,
          protocol: 'http:',
          options: [Object: null prototype],
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype],
          freeSockets: [Object: null prototype],
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 3,
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'PUT',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        joinDuplicateHeaders: undefined,
        path: '/api/event-seating/v1/sessions/undefined/status',
        _ended: true,
        res: IncomingMessage {
          _events: [Object],
          _readableState: [ReadableState],
          _maxListeners: undefined,
          socket: [Socket],
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [Array],
          rawTrailers: [],
          joinDuplicateHeaders: undefined,
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 400,
          statusMessage: '',
          client: [Socket],
          _consuming: true,
          _dumped: false,
          req: [Circular *1],
          _eventsCount: 4,
          responseUrl: 'http://localhost:8081/api/event-seating/v1/sessions/undefined/status',
          redirects: [],
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: [Object],
          [Symbol(kHeadersCount)]: 26,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0
        },
        aborted: false,
        timeoutCb: [Function: emitRequestTimeout],
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'localhost',
        protocol: 'http:',
        _redirectable: Writable {
          _events: [Object],
          _writableState: [WritableState],
          _maxListeners: undefined,
          _options: [Object],
          _ended: true,
          _ending: true,
          _redirectCount: 0,
          _redirects: [],
          _requestBodyLength: 20,
          _requestBodyBuffers: [],
          _eventsCount: 3,
          _onNativeResponse: [Function (anonymous)],
          _currentRequest: [Circular *1],
          _currentUrl: 'http://localhost:8081/api/event-seating/v1/sessions/undefined/status',
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false
        },
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kChunkedBuffer)]: [],
        [Symbol(kChunkedLength)]: 0,
        [Symbol(kSocket)]: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'localhost',
          _closeAfterHandlingError: false,
          _events: [Object],
          _readableState: [ReadableState],
          _writableState: [WritableState],
          allowHalfOpen: false,
          _maxListeners: undefined,
          _eventsCount: 7,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          timeout: 5000,
          parser: null,
          _httpMessage: [Circular *1],
          autoSelectFamilyAttemptedAddresses: [Array],
          [Symbol(async_id_symbol)]: 3082,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: Timeout {
            _idleTimeout: 5000,
            _idlePrev: [TimersList],
            _idleNext: [Timeout],
            _idleStart: 2994,
            _onTimeout: [Function: bound ],
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 3081,
            [Symbol(triggerId)]: 3062,
            [Symbol(kAsyncContextFrame)]: undefined,
            [Symbol(kResourceStore)]: 'Event Ticketing System Integration Tests A12. Put session ON_SALE'
          },
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 60,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          accept: [Array],
          'content-type': [Array],
          authorization: [Array],
          'user-agent': [Array],
          'content-length': [Array],
          'accept-encoding': [Array],
          host: [Array]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 65536,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      response: {
        status: 400,
        statusText: '',
        headers: Object [AxiosHeaders] {
          vary: 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers',
          'x-content-type-options': 'nosniff',
          'x-xss-protection': '0',
          'cache-control': 'no-cache, no-store, max-age=0, must-revalidate',
          pragma: 'no-cache',
          expires: '0',
          'x-frame-options': 'DENY',
          'content-type': 'application/json',
          'transfer-encoding': 'chunked',
          date: 'Sat, 11 Oct 2025 18:47:08 GMT',
          connection: 'close'
        },
        config: {
          transitional: [Object],
          adapter: [Array],
          transformRequest: [Array],
          transformResponse: [Array],
          timeout: 0,
          xsrfCookieName: 'XSRF-TOKEN',
          xsrfHeaderName: 'X-XSRF-TOKEN',
          maxContentLength: -1,
          maxBodyLength: -1,
          env: [Object],
          validateStatus: [Function: validateStatus],
          headers: [Object [AxiosHeaders]],
          method: 'put',
          url: 'http://localhost:8081/api/event-seating/v1/sessions/undefined/status',
          data: '{"status":"ON_SALE"}',
          allowAbsoluteUrls: true
        },
        request: <ref *1> ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: 20,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: false,
          _header: 'PUT /api/event-seating/v1/sessions/undefined/status HTTP/1.1\r\n' +
            'Accept: application/json, text/plain, */*\r\n' +
            'Content-Type: application/json\r\n' +
            'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6czh1R0p2OGVMV2dzWGloampyRDhoakFKUDdJOFhnOFZQQnJlQVEyT0VZIn0.eyJleHAiOjE3NjAyMDg3MjgsImlhdCI6MTc2MDIwODQyOCwianRpIjoib25ydHJvOjA5ZDU3M2NkLWVhODQtYzhhYi0zYzM5LWE4Zjc2N2ViZmQwMCIsImlzcyI6Imh0dHA6Ly9hdXRoLnRpY2tldGx5LmNvbTo4MDgwL3JlYWxtcy9ldmVudC10aWNrZXRpbmciLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYWE0ZjRlZDctMWM5ZC00ZjFjLThiMDYtMzFlZjY3OWVlYTJmIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tdGVzdGluZyIsInNpZCI6IjBjODI1Y2QwLTEyYjgtNDRhMi1iZDY0LTNkMWQxOWNlNTk1OCIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJkZWZhdWx0LXJvbGVzLWV2ZW50LXRpY2tldGluZyIsIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Imdyb3VwX21lbWJlcnNoaXAgaW50ZXJuYWwtYXBpIiwidXNlcl9ncm91cHMiOlsiL1RpZXJzL0VOVEVSUFJJU0UiLCIvUGVybWlzc2lvbnMvVXNlcnMiXX0.c2zrWJQenHIooa7y3JT101aLGwriYtnMA8R_tM--jZ5iOEq1-yyET49dWE8pgz4Cq7frD6OgIVzMnUf2LSMOA2wHk3x0ZyhbsKvRfD52PCxrl8Zr2jJo3-eCwiTv4rainuiGT9rWfTerPdt1Gidiv3_-Zmmx2QluED7uqmeehQvVcxfZhBn4Xd0HvDlW2WaIrh_C6B4pSuvvZHa9f8vkR5WYyzQRJQwADwNJxfiMubypSjed5-p8PvkVqU186LuMdt07R6WO9jj9bD8wxv_UM-cZAYH9XVcNDsOlZ0FDSvL388zZqUQlMxLG28dt8ecORA1ggFHHMCKhPX7n4iUzUQ\r\n' +
            'User-Agent: axios/1.12.2\r\n' +
            'Content-Length: 20\r\n' +
            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
            'Host: localhost:8081\r\n' +
            'Connection: keep-alive\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'PUT',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          joinDuplicateHeaders: undefined,
          path: '/api/event-seating/v1/sessions/undefined/status',
          _ended: true,
          res: [IncomingMessage],
          aborted: false,
          timeoutCb: [Function: emitRequestTimeout],
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: 'localhost',
          protocol: 'http:',
          _redirectable: [Writable],
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kChunkedBuffer)]: [],
          [Symbol(kChunkedLength)]: 0,
          [Symbol(kSocket)]: [Socket],
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 65536,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        data: {
          status: 400,
          message: 'Invalid parameter type: sessionId',
          timestamp: '2025-10-11T18:47:08.834403734'
        }
      },
      status: 400
    }

      42 |     return response.data;
      43 |   } catch (error) {
    > 44 |     console.error(`Error making ${method.toUpperCase()} request to ${url}:`, error);
         |             ^
      45 |     throw error;
      46 |   }
      47 | }

      at utils/apiUtils.ts:44:13
          at Generator.throw (<anonymous>)
      at rejected (utils/apiUtils.ts:6:65)

  console.error
    Error making GET request to http://localhost:8082/api/event-query/v1/sessions/undefined/seating-map: AxiosError {
      message: 'Request failed with status code 404',
      name: 'AxiosError',
      code: 'ERR_BAD_REQUEST',
      config: {
        transitional: {
          silentJSONParsing: true,
          forcedJSONParsing: true,
          clarifyTimeoutError: false
        },
        adapter: [ 'xhr', 'http', 'fetch' ],
        transformRequest: [ [Function: transformRequest] ],
        transformResponse: [ [Function: transformResponse] ],
        timeout: 0,
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        env: { FormData: [Function [FormData]], Blob: [class Blob] },
        validateStatus: [Function: validateStatus],
        headers: Object [AxiosHeaders] {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': undefined,
          Authorization: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6czh1R0p2OGVMV2dzWGloampyRDhoakFKUDdJOFhnOFZQQnJlQVEyT0VZIn0.eyJleHAiOjE3NjAyMDg3MjgsImlhdCI6MTc2MDIwODQyOCwianRpIjoib25ydHJvOjA5ZDU3M2NkLWVhODQtYzhhYi0zYzM5LWE4Zjc2N2ViZmQwMCIsImlzcyI6Imh0dHA6Ly9hdXRoLnRpY2tldGx5LmNvbTo4MDgwL3JlYWxtcy9ldmVudC10aWNrZXRpbmciLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYWE0ZjRlZDctMWM5ZC00ZjFjLThiMDYtMzFlZjY3OWVlYTJmIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tdGVzdGluZyIsInNpZCI6IjBjODI1Y2QwLTEyYjgtNDRhMi1iZDY0LTNkMWQxOWNlNTk1OCIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJkZWZhdWx0LXJvbGVzLWV2ZW50LXRpY2tldGluZyIsIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Imdyb3VwX21lbWJlcnNoaXAgaW50ZXJuYWwtYXBpIiwidXNlcl9ncm91cHMiOlsiL1RpZXJzL0VOVEVSUFJJU0UiLCIvUGVybWlzc2lvbnMvVXNlcnMiXX0.c2zrWJQenHIooa7y3JT101aLGwriYtnMA8R_tM--jZ5iOEq1-yyET49dWE8pgz4Cq7frD6OgIVzMnUf2LSMOA2wHk3x0ZyhbsKvRfD52PCxrl8Zr2jJo3-eCwiTv4rainuiGT9rWfTerPdt1Gidiv3_-Zmmx2QluED7uqmeehQvVcxfZhBn4Xd0HvDlW2WaIrh_C6B4pSuvvZHa9f8vkR5WYyzQRJQwADwNJxfiMubypSjed5-p8PvkVqU186LuMdt07R6WO9jj9bD8wxv_UM-cZAYH9XVcNDsOlZ0FDSvL388zZqUQlMxLG28dt8ecORA1ggFHHMCKhPX7n4iUzUQ',
          'User-Agent': 'axios/1.12.2',
          'Accept-Encoding': 'gzip, compress, deflate, br'
        },
        method: 'get',
        url: 'http://localhost:8082/api/event-query/v1/sessions/undefined/seating-map',
        allowAbsoluteUrls: true,
        data: undefined
      },
      request: <ref *1> ClientRequest {
        _events: [Object: null prototype] {
          abort: [Function (anonymous)],
          aborted: [Function (anonymous)],
          connect: [Function (anonymous)],
          error: [Function (anonymous)],
          socket: [Function (anonymous)],
          timeout: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: true,
        _header: 'GET /api/event-query/v1/sessions/undefined/seating-map HTTP/1.1\r\n' +
          'Accept: application/json, text/plain, */*\r\n' +
          'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6czh1R0p2OGVMV2dzWGloampyRDhoakFKUDdJOFhnOFZQQnJlQVEyT0VZIn0.eyJleHAiOjE3NjAyMDg3MjgsImlhdCI6MTc2MDIwODQyOCwianRpIjoib25ydHJvOjA5ZDU3M2NkLWVhODQtYzhhYi0zYzM5LWE4Zjc2N2ViZmQwMCIsImlzcyI6Imh0dHA6Ly9hdXRoLnRpY2tldGx5LmNvbTo4MDgwL3JlYWxtcy9ldmVudC10aWNrZXRpbmciLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYWE0ZjRlZDctMWM5ZC00ZjFjLThiMDYtMzFlZjY3OWVlYTJmIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tdGVzdGluZyIsInNpZCI6IjBjODI1Y2QwLTEyYjgtNDRhMi1iZDY0LTNkMWQxOWNlNTk1OCIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJkZWZhdWx0LXJvbGVzLWV2ZW50LXRpY2tldGluZyIsIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Imdyb3VwX21lbWJlcnNoaXAgaW50ZXJuYWwtYXBpIiwidXNlcl9ncm91cHMiOlsiL1RpZXJzL0VOVEVSUFJJU0UiLCIvUGVybWlzc2lvbnMvVXNlcnMiXX0.c2zrWJQenHIooa7y3JT101aLGwriYtnMA8R_tM--jZ5iOEq1-yyET49dWE8pgz4Cq7frD6OgIVzMnUf2LSMOA2wHk3x0ZyhbsKvRfD52PCxrl8Zr2jJo3-eCwiTv4rainuiGT9rWfTerPdt1Gidiv3_-Zmmx2QluED7uqmeehQvVcxfZhBn4Xd0HvDlW2WaIrh_C6B4pSuvvZHa9f8vkR5WYyzQRJQwADwNJxfiMubypSjed5-p8PvkVqU186LuMdt07R6WO9jj9bD8wxv_UM-cZAYH9XVcNDsOlZ0FDSvL388zZqUQlMxLG28dt8ecORA1ggFHHMCKhPX7n4iUzUQ\r\n' +
          'User-Agent: axios/1.12.2\r\n' +
          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
          'Host: localhost:8082\r\n' +
          'Connection: keep-alive\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: Agent {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 80,
          protocol: 'http:',
          options: [Object: null prototype],
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {},
          freeSockets: [Object: null prototype],
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 2,
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'GET',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        joinDuplicateHeaders: undefined,
        path: '/api/event-query/v1/sessions/undefined/seating-map',
        _ended: true,
        res: IncomingMessage {
          _events: [Object],
          _readableState: [ReadableState],
          _maxListeners: undefined,
          socket: null,
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [Array],
          rawTrailers: [],
          joinDuplicateHeaders: undefined,
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 404,
          statusMessage: 'Not Found',
          client: [Socket],
          _consuming: false,
          _dumped: false,
          req: [Circular *1],
          _eventsCount: 4,
          responseUrl: 'http://localhost:8082/api/event-query/v1/sessions/undefined/seating-map',
          redirects: [],
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: [Object],
          [Symbol(kHeadersCount)]: 18,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0
        },
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: true,
        host: 'localhost',
        protocol: 'http:',
        _redirectable: Writable {
          _events: [Object],
          _writableState: [WritableState],
          _maxListeners: undefined,
          _options: [Object],
          _ended: true,
          _ending: true,
          _redirectCount: 0,
          _redirects: [],
          _requestBodyLength: 0,
          _requestBodyBuffers: [],
          _eventsCount: 3,
          _onNativeResponse: [Function (anonymous)],
          _currentRequest: [Circular *1],
          _currentUrl: 'http://localhost:8082/api/event-query/v1/sessions/undefined/seating-map',
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false
        },
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kChunkedBuffer)]: [],
        [Symbol(kChunkedLength)]: 0,
        [Symbol(kSocket)]: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'localhost',
          _closeAfterHandlingError: false,
          _events: [Object],
          _readableState: [ReadableState],
          _writableState: [WritableState],
          allowHalfOpen: false,
          _maxListeners: undefined,
          _eventsCount: 6,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          timeout: 5000,
          parser: null,
          _httpMessage: null,
          autoSelectFamilyAttemptedAddresses: [Array],
          [Symbol(async_id_symbol)]: -1,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: Timeout {
            _idleTimeout: 5000,
            _idlePrev: [TimersList],
            _idleNext: [Timeout],
            _idleStart: 3010,
            _onTimeout: [Function: bound ],
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 3297,
            [Symbol(triggerId)]: 3295,
            [Symbol(kAsyncContextFrame)]: undefined,
            [Symbol(kResourceStore)]: 'Event Ticketing System Integration Tests A13. Fetch session seating map'
          },
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 1,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          accept: [Array],
          authorization: [Array],
          'user-agent': [Array],
          'accept-encoding': [Array],
          host: [Array]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 65536,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      response: {
        status: 404,
        statusText: 'Not Found',
        headers: Object [AxiosHeaders] {
          'content-type': 'application/json',
          'content-length': '223',
          'cache-control': 'no-cache, no-store, max-age=0, must-revalidate',
          pragma: 'no-cache',
          expires: '0',
          'x-content-type-options': 'nosniff',
          'x-frame-options': 'DENY',
          'x-xss-protection': '0',
          'referrer-policy': 'no-referrer'
        },
        config: {
          transitional: [Object],
          adapter: [Array],
          transformRequest: [Array],
          transformResponse: [Array],
          timeout: 0,
          xsrfCookieName: 'XSRF-TOKEN',
          xsrfHeaderName: 'X-XSRF-TOKEN',
          maxContentLength: -1,
          maxBodyLength: -1,
          env: [Object],
          validateStatus: [Function: validateStatus],
          headers: [Object [AxiosHeaders]],
          method: 'get',
          url: 'http://localhost:8082/api/event-query/v1/sessions/undefined/seating-map',
          allowAbsoluteUrls: true,
          data: undefined
        },
        request: <ref *1> ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: true,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: false,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: 0,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: true,
          _header: 'GET /api/event-query/v1/sessions/undefined/seating-map HTTP/1.1\r\n' +
            'Accept: application/json, text/plain, */*\r\n' +
            'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6czh1R0p2OGVMV2dzWGloampyRDhoakFKUDdJOFhnOFZQQnJlQVEyT0VZIn0.eyJleHAiOjE3NjAyMDg3MjgsImlhdCI6MTc2MDIwODQyOCwianRpIjoib25ydHJvOjA5ZDU3M2NkLWVhODQtYzhhYi0zYzM5LWE4Zjc2N2ViZmQwMCIsImlzcyI6Imh0dHA6Ly9hdXRoLnRpY2tldGx5LmNvbTo4MDgwL3JlYWxtcy9ldmVudC10aWNrZXRpbmciLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYWE0ZjRlZDctMWM5ZC00ZjFjLThiMDYtMzFlZjY3OWVlYTJmIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tdGVzdGluZyIsInNpZCI6IjBjODI1Y2QwLTEyYjgtNDRhMi1iZDY0LTNkMWQxOWNlNTk1OCIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJkZWZhdWx0LXJvbGVzLWV2ZW50LXRpY2tldGluZyIsIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Imdyb3VwX21lbWJlcnNoaXAgaW50ZXJuYWwtYXBpIiwidXNlcl9ncm91cHMiOlsiL1RpZXJzL0VOVEVSUFJJU0UiLCIvUGVybWlzc2lvbnMvVXNlcnMiXX0.c2zrWJQenHIooa7y3JT101aLGwriYtnMA8R_tM--jZ5iOEq1-yyET49dWE8pgz4Cq7frD6OgIVzMnUf2LSMOA2wHk3x0ZyhbsKvRfD52PCxrl8Zr2jJo3-eCwiTv4rainuiGT9rWfTerPdt1Gidiv3_-Zmmx2QluED7uqmeehQvVcxfZhBn4Xd0HvDlW2WaIrh_C6B4pSuvvZHa9f8vkR5WYyzQRJQwADwNJxfiMubypSjed5-p8PvkVqU186LuMdt07R6WO9jj9bD8wxv_UM-cZAYH9XVcNDsOlZ0FDSvL388zZqUQlMxLG28dt8ecORA1ggFHHMCKhPX7n4iUzUQ\r\n' +
            'User-Agent: axios/1.12.2\r\n' +
            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
            'Host: localhost:8082\r\n' +
            'Connection: keep-alive\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'GET',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          joinDuplicateHeaders: undefined,
          path: '/api/event-query/v1/sessions/undefined/seating-map',
          _ended: true,
          res: [IncomingMessage],
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: true,
          host: 'localhost',
          protocol: 'http:',
          _redirectable: [Writable],
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kChunkedBuffer)]: [],
          [Symbol(kChunkedLength)]: 0,
          [Symbol(kSocket)]: [Socket],
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 65536,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        data: {
          status: 404,
          error: 'Not Found',
          message: "Session seating map not found with session_id: 'undefined'",
          path: '/api/event-query/v1/sessions/undefined/seating-map',
          timestamp: '2025-10-11 18:47:08',
          validationErrors: null
        }
      },
      status: 404
    }

      42 |     return response.data;
      43 |   } catch (error) {
    > 44 |     console.error(`Error making ${method.toUpperCase()} request to ${url}:`, error);
         |             ^
      45 |     throw error;
      46 |   }
      47 | }

      at utils/apiUtils.ts:44:13
          at Generator.throw (<anonymous>)
      at rejected (utils/apiUtils.ts:6:65)

  console.log


      at TestReporter.printSummary (utils/testReporter.ts:17:13)

  console.log
    ================================================================================

      at TestReporter.printSummary (utils/testReporter.ts:18:13)

  console.log
    TEST SUMMARY:

      at TestReporter.printSummary (utils/testReporter.ts:19:13)

  console.log
    ================================================================================

      at TestReporter.printSummary (utils/testReporter.ts:20:13)

  console.log
    1. Initial Authentication: PASSED

      at utils/testReporter.ts:43:15
          at Array.forEach (<anonymous>)

  console.log
    --------------------------------------------------------------------------------

      at TestReporter.printSummary (utils/testReporter.ts:49:13)

  console.log
    Total: 1 | Passed: 1 | Failed: 0 | Skipped: 0

      at TestReporter.printSummary (utils/testReporter.ts:50:13)

  console.log
    ================================================================================

      at TestReporter.printSummary (utils/testReporter.ts:51:13)

