apiVersion: v1
kind: ConfigMap
metadata:
  name: debezium-bootstrap
  namespace: ticketly
data:
  debezium.json: |
    {
      "name": "event-seating-connector",
      "config": {
        "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
        "database.hostname": "${DATABASE_ADDRESS}",
        "database.port": "${DATABASE_PORT}",
        "database.user": "${DATABASE_USERNAME}",
        "database.password": "${DATABASE_PASSWORD}",
        "database.dbname": "event_service",
        "database.server.name": "ticketly-postgres",
        "table.include.list": "public.events,public.event_sessions,public.session_seating_maps,public.organizations,public.categories,public.event_cover_photos,public.tiers,public.discounts,public.discount_sessions,public.discount_tiers",
        "topic.prefix": "dbz.ticketly",
        "plugin.name": "pgoutput",
        "heartbeat.interval.ms": "60000",
        "heartbeat.action.query": "UPDATE public.debezium_heartbeat SET ts = NOW() WHERE id = '1';"
      }
    }
  init-debezium.sh: |
    #!/bin/sh
    set -e

    CONNECT_URL="http://debezium-connect:8083/connectors"
    CONFIG_TEMPLATE="/config/debezium.json"
    CONFIG_FILE="/tmp/debezium-final.json"

    echo "Waiting for Debezium Connect to start..."
    sleep 30

    echo "Substituting environment variables in Debezium template..."
    envsubst < ${CONFIG_TEMPLATE} > ${CONFIG_FILE}

    CONNECTOR_NAME=$(jq -r .name ${CONFIG_FILE})

    echo "Generated config for connector: '${CONNECTOR_NAME}'"
    cat ${CONFIG_FILE}

    STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" "${CONNECT_URL}/${CONNECTOR_NAME}")

    if [ "$STATUS_CODE" -eq "404" ]; then
      echo "Connector '${CONNECTOR_NAME}' not found. Creating..."
      curl -s -X POST -H "Content-Type: application/json" --data @${CONFIG_FILE} ${CONNECT_URL}
    elif [ "$STATUS_CODE" -eq "200" ]; then
      echo "Connector '${CONNECTOR_NAME}' found. Updating configuration..."
      curl -s -X PUT -H "Content-Type: application/json" --data "$(jq .config ${CONFIG_FILE})" "${CONNECT_URL}/${CONNECTOR_NAME}/config"
    else
      echo "Error: Received status code ${STATUS_CODE} when checking for connector '${CONNECTOR_NAME}'."
      exit 1
    fi

    echo "Connector '${CONNECTOR_NAME}' is configured."
---
apiVersion: batch/v1
kind: Job
metadata:
  name: debezium-connector-init
  namespace: ticketly
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        job: debezium-connector-init
    spec:
      restartPolicy: OnFailure
      containers:
        - name: debezium-connector-init
          image: alpine:3.19
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - >-
              apk add --no-cache curl gettext jq;
              chmod +x /scripts/init-debezium.sh;
              /scripts/init-debezium.sh
          env:
            - name: DATABASE_ADDRESS
              valueFrom:
                secretKeyRef:
                  name: ticketly-app-secrets
                  key: DATABASE_ADDRESS
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: ticketly-app-secrets
                  key: DATABASE_PORT
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: ticketly-app-secrets
                  key: DATABASE_USERNAME
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ticketly-app-secrets
                  key: DATABASE_PASSWORD
          volumeMounts:
            - name: debezium-config
              mountPath: /config
            - name: debezium-script
              mountPath: /scripts
      volumes:
        - name: debezium-config
          configMap:
            name: debezium-bootstrap
            items:
              - key: debezium.json
                path: debezium.json
        - name: debezium-script
          configMap:
            name: debezium-bootstrap
            items:
              - key: init-debezium.sh
                path: init-debezium.sh
