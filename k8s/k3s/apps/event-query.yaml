apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-query-service
  namespace: ticketly
  labels:
    app: event-query-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: event-query-service
  template:
    metadata:
      labels:
        app: event-query-service
    spec:
      containers:
        - name: event-query-service
          image: ticketly/event-query-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8082
          env:
            # JVM Configuration - CRITICAL FOR MEMORY MANAGEMENT
            - name: JAVA_OPTS
              value: >-
                -XX:+UseContainerSupport
                -XX:InitialRAMPercentage=40.0
                -XX:MinRAMPercentage=40.0
                -XX:MaxRAMPercentage=65.0
                -XX:+UseG1GC
                -XX:MaxGCPauseMillis=200
                -XX:ParallelGCThreads=2
                -XX:ConcGCThreads=1
                -XX:InitiatingHeapOccupancyPercent=45
                -XX:G1ReservePercent=10
                -XX:MaxMetaspaceSize=256m
                -XX:+ExitOnOutOfMemoryError
                -XX:+UseStringDeduplication
                -XX:G1PeriodicGCInterval=30000
                -XX:MaxHeapFreeRatio=30
                -XX:MinHeapFreeRatio=10

            # Application Configuration
            - name: INFRA_HOST
              valueFrom:
                configMapKeyRef:
                  name: ticketly-global-config
                  key: INFRA_HOST
            - name: MONGODB_URI
              value: "mongodb://$(INFRA_HOST):27017/event-seating"
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "$(INFRA_HOST):9092"
            - name: REDIS_HOST
              value: "$(INFRA_HOST)"
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: ticketly-global-config
                  key: REDIS_PORT
            - name: COMMAND_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: ticketly-global-config
                  key: EVENT_SERVICE_URL
            - name: EVENT_PROJECTION_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: ticketly-app-secrets
                  key: EVENT_PROJECTION_CLIENT_SECRET
            - name: KEYCLOAK_ISSUER_URI
              valueFrom:
                configMapKeyRef:
                  name: ticketly-global-config
                  key: KEYCLOAK_ISSUER_URI
            - name: KEYCLOAK_JWK_SET_URI
              valueFrom:
                configMapKeyRef:
                  name: ticketly-global-config
                  key: KEYCLOAK_JWK_SET_URI
            - name: KAFKA_GROUP_ID
              value: event-query-service
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: ticketly-app-secrets
                  key: AWS_REGION
            - name: AWS_S3_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: ticketly-app-secrets
                  key: AWS_S3_BUCKET_NAME
            - name: AWS_S3_PUBLIC_URL
              value: https://$(AWS_S3_BUCKET_NAME).s3.$(AWS_REGION).amazonaws.com
            - name: ROOT_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: ticketly-global-config
                  key: LOG_LEVEL_ROOT
            - name: COM_TICKETLY_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: ticketly-global-config
                  key: COM_TICKETLY_LOG_LEVEL
            - name: SPRING_SECURITY_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: ticketly-global-config
                  key: SPRING_SECURITY_LOG_LEVEL
            - name: MONGODB_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: ticketly-global-config
                  key: MONGODB_LOG_LEVEL
            - name: GA_PROPERTY_ID
              valueFrom:
                secretKeyRef:
                  name: ticketly-app-secrets
                  key: GA_PROPERTY_ID
            - name: GOOGLE_CLIENT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: ticketly-app-secrets
                  key: GOOGLE_CLIENT_EMAIL
            - name: GOOGLE_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: ticketly-google-private-key
                  key: GOOGLE_PRIVATE_KEY
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: ticketly-app-secrets
                  key: GOOGLE_CLIENT_ID
            - name: GOOGLE_PRIVATE_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: ticketly-app-secrets
                  key: GOOGLE_PRIVATE_KEY_ID
          resources:
            requests:
              cpu: 300m
              memory: 750Mi
            limits:
              cpu: 1000m
              memory: 1280Mi
          readinessProbe:
            httpGet:
              path: /api/event-query/actuator/health/readiness
              port: 8082
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /api/event-query/actuator/health/liveness
              port: 8082
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: event-query-service
  namespace: ticketly
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: event-query-service
  minReplicas: 1
  maxReplicas: 4
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
        - type: Percent
          value: 150
          periodSeconds: 30
        - type: Pods
          value: 2
          periodSeconds: 30
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 180
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
      selectPolicy: Max
